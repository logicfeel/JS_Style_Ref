
// [ 자바스크립트 스타일 가이드 ] 
// "읽기 좋은 코딩 기법" -한빛 참조-



// ##########################################################
// 들여쓰기
//      - 기본 : 4개 공백 

// ##########################################################
// 줄 길이
/*
    - 기본 : 최대 80자
    - 더 길면 (콤마, 더기기 기호 등) 이후 줄 바꿈
*/
var str;
str = "상위줄" +
    "하위줄";

// 나쁨 : 다음줄로 이어짐
str = "상위줄 \
    하위줄";

str = "하위줄";
str += "상위줄";

func(a, b, c,
    d, e)

// ##########################################################
// 기본 리터럴
/*
    - 기본 : 문자열은 큰따움표
    - 확인! : '' 작은 따움표가 유리한 경우
*/
var name = "Neo Kim";

// ##########################################################
// null 값 사용할 경우 (**)
/*      
    1. 객체값을 나중에 할당할 변수를 초기화 할 때 : var parson = null;
    2. 초기화된 변수에 객체 값이 할당되었는지 비교할 때 : if (parson === null)
    3. 객체를 인자로 넘겨야 하는 함수를 호출할 때 :  if (getSum() !== null )
    4. 함수에서 객체를 반환해야 할 때 : return null // 없을시
*/
// 나쁨 : 인자를 넘김 여부를 비교, !== 연산자 사용 안함
if (arg2 != null);
// ##########################################################
// undefined 값 사용할 경우 (**) : 
/*
    - 절대 사용 안함 !!
    - 필요시 typeof 연산자 사용
*/
if (typeof variable === "undefined");

// 나쁨 : undefined 사용
if (typeof variable === undefined);

// ##########################################################
// 연산자에 공백 넣기
/*
    - 연산자와 피연산자 사이에 공백 넣기
    - 연산자 : = , ===, &&, <, 
    - 예외 : ++ 증감, --감소연산자는 붙임
*/
var abc = aaa + bbb;

value[0] === item;

for(i = 0; i < 10; i++);

// ##########################################################
// 괄호에 공백 넣기
/*
    - 괄호 앞과 뒤는 공백을 없애기
*/
function func(a, b)

if (a < b);

// 나쁨 : 인자 안에 불필요한 공백 넣음
process( i );

// ##########################################################
// 객체 리터럴
/*
    - 
*/

// ##########################################################
// 주석

// ##########################################################
// 한줄 주석

// ##########################################################
// 여러 줄 주석

// ##########################################################
// 주석 이노테이션

// ##########################################################
// 변수 선언

// ##########################################################
// 함수 선언

// ##########################################################
// 이름 규칙

// ##########################################################
// strict 모드

// ##########################################################
// 할당

// ##########################################################
// 동등 연산자

// ##########################################################
// 삼항 연산자

// ##########################################################
// 문장

// ##########################################################
// 간단한 문장

// ##########################################################
// return 문

// ##########################################################
// 복합문

// ##########################################################
// if 문

// ##########################################################
// for 문

// ##########################################################
// while 문

// ##########################################################
// do 문

// ##########################################################
// switch 문

// ##########################################################
// try 문

// ##########################################################
// 공백

// ##########################################################
// 유의사항

// ##########################################################
// VS code 예약어
//  - shift + tab  들여쓰기



